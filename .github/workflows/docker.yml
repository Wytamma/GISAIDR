# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: Docker

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        registry: ['ghcr.io', 'docker.io']

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      packages: write

    steps:

      # Inspired by: https://stackoverflow.com/a/70249520
      - name: Check Secrets
        id: check-secrets
        run: |
          if [[ "${{ matrix.registry }}" == 'ghcr.io' ]]; then
            echo "pass=true" >> $GITHUB_OUTPUT;
          elif [[ "${{ matrix.registry }}" == 'docker.io' ]]; then
            if [[ "${{ secrets.DOCKER_USERNAME }}" != '' && "${{ secrets.DOCKER_PASSWORD }}" != '' ]]; then
              echo "pass=true" >> $GITHUB_OUTPUT;
            else
              echo "pass=false" >> $GITHUB_OUTPUT;
            fi
          else
            echo "pass=false" >> $GITHUB_OUTPUT;
          fi

      - name: Checkout
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        uses: actions/checkout@v3

      - name: Set up QEMU
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Registry Login
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Metadata
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=GISAIDR.tar

      - name: Load
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        run: |
          load=$(docker load --input GISAIDR.tar | tee /dev/stderr)
          TAGS=$(echo $load | sed "s/Loaded image: //g")
          echo TAGS="$TAGS" >> $GITHUB_ENV

      # output.tags can be an array (ex. v0.2.0, main, latest)
      - name: Help
        if: ${{ steps.check-secrets.outputs.pass == 'true' }}
        run: >
          for tag in $TAGS; do
            echo $tag
            docker run $tag GISAIDR --help
          done

      # Build the image, only push on 'main' or a tag that starts with 'v'
      # Extra debugging, build and push on 'cli' branch for testing
      - name: Build and Push
        uses: docker/build-push-action@v5
        if: |
          ${{ 
            steps.check-secrets.outputs.pass == 'true' &&
            (startsWith(github.event.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/cli' )
          }}
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # # Disable uploading image as CI artifact for debugging since it's quite large ~1GB compressed
      # - name: upload image artifact
      #   uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: GISAIDR-docker
      #     path: GISAIDR.tar
      #     retention-days: 1
      #     if-no-files-found: error
